basePath: /api/v1
definitions:
  domain.Address:
    properties:
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      id:
        type: integer
      is_default:
        type: boolean
      postal_code:
        type: string
      state:
        type: string
      street:
        type: string
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.Category:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      products:
        items:
          $ref: '#/definitions/domain.Product'
        type: array
      updated_at:
        type: string
    type: object
  domain.Order:
    properties:
      created_at:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/domain.OrderItem'
        type: array
      payment_status:
        $ref: '#/definitions/domain.PaymentStatus'
      shipping_address:
        $ref: '#/definitions/domain.Address'
      status:
        $ref: '#/definitions/domain.OrderStatus'
      total_amount:
        type: number
      updated_at:
        type: string
      user:
        $ref: '#/definitions/domain.User'
      user_id:
        type: integer
    type: object
  domain.OrderItem:
    properties:
      created_at:
        type: string
      id:
        type: integer
      order_id:
        type: integer
      price:
        type: number
      product:
        $ref: '#/definitions/domain.Product'
      product_id:
        type: integer
      quantity:
        type: integer
      updated_at:
        type: string
    type: object
  domain.OrderStatus:
    enum:
    - pending
    - confirmed
    - shipped
    - delivered
    - cancelled
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusConfirmed
    - StatusShipped
    - StatusDelivered
    - StatusCancelled
  domain.PaymentStatus:
    enum:
    - pending
    - completed
    - failed
    - refunded
    type: string
    x-enum-varnames:
    - PaymentPending
    - PaymentCompleted
    - PaymentFailed
    - PaymentRefunded
  domain.Product:
    properties:
      category:
        $ref: '#/definitions/domain.Category'
      category_id:
        type: integer
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      image_url:
        type: string
      name:
        type: string
      price:
        type: number
      sku:
        type: string
      stock:
        type: integer
      updated_at:
        type: string
    type: object
  domain.RegisterRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      password:
        minLength: 6
        type: string
    required:
    - email
    - first_name
    - last_name
    - password
    type: object
  domain.RegisterResponse:
    properties:
      token:
        type: string
      user:
        $ref: '#/definitions/domain.User'
    type: object
  domain.User:
    properties:
      addresses:
        items:
          $ref: '#/definitions/domain.Address'
        type: array
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      id:
        type: integer
      last_name:
        type: string
      orders:
        items:
          $ref: '#/definitions/domain.Order'
        type: array
      role:
        $ref: '#/definitions/domain.UserRole'
      updated_at:
        type: string
    type: object
  domain.UserRole:
    enum:
    - user
    - admin
    type: string
    x-enum-varnames:
    - RoleUser
    - RoleAdmin
  response.Response:
    properties:
      data: {}
      error:
        type: string
      message:
        type: string
      status:
        type: integer
    type: object
host: localhost:8080
info:
  contact: {}
  description: A RESTful API for an e-commerce application
  title: E-commerce API
  version: "1.0"
paths:
  /api/v1/users/register:
    post:
      consumes:
      - application/json
      description: Register a new user with email and password
      parameters:
      - description: User registration details
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/domain.RegisterRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.RegisterResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/response.Response'
        "409":
          description: Conflict
          schema:
            $ref: '#/definitions/response.Response'
      summary: Register a new user
      tags:
      - users
swagger: "2.0"
